{
  "hash": "2eb9a75faef896d06f2e468fc08121c1",
  "result": {
    "markdown": "---\ntitle: \"Chapter 33: Gamma Random Variables\"\nauthor: \"Meike Niederhausen and Nicky Wakim\"\ndate: \"11/29/2023\"\ntitle-slide-attributes:\n    data-background-color: \"#006a4e\"\ncategories: [\"Week 10\"]\nformat: \n  revealjs:\n    theme: [default, simple_NW.scss]\n    toc: true\n    chalkboard: true\n    slide-number: true\n    show-slide-number: all\n    width: 1955\n    height: 1100\n    footer: Chapter 33 Slides\n---\n\n\n## Learning Objectives\n\n1.  Identify the variable and the parameters in a story, and state in English what the variable and its parameters mean.\n\n\n::: {.cell}\n<style type=\"text/css\">\ncode.sourceCode {\n  font-size: 1.5em;\n  /* or try font-size: xx-large; */\n}\n</style>\n:::\n\n\n## Properties of gamma RVs\n\n-   **Scenario:** Modeling the time until the $r^{th}$ event.\n-   Continuous analog to the Negative Binomial distribution\n-   Shorthand: $X \\sim \\text{Gamma}(r, \\lambda)$\n\n$$\nf_X(x) = \\dfrac{\\lambda^r}{\\Gamma(r)}x^{r-1} e^{-\\lambda x}\\text{ for } x>0, \\lambda>0, \\Gamma(r) = (r-1)!\n$$\n\n$$\nF_X(x) = \\left\\{\n        \\begin{array}{ll}\n            0 & \\quad x<0 \\quad \\\\\n            1 - e^{-\\lambda x}\\displaystyle\\sum_{j=0}^{r-1}\\dfrac{(\\lambda x)^j}{j!}  & \\quad x\\geq0 \\\\\n        \\end{array}\n    \\right.\n$$\n\n$$\\text{E}(X) = \\dfrac{r}{\\lambda}\\text{, }\\text{ Var}(X) = \\dfrac{r}{\\lambda^2}$$\n\nCommon to see $\\alpha = r$ and $\\beta = \\lambda$\n\n## Identifying gamma RV from word problems\n\n-   Gamma distribution with $r=1$ is same as exponential\n\n    -   Just like Negative Binomial with $r=1$ is same as the geometric distribution\n\n-   Similar to exponential\n\n    -   Look for time between or until events/successes\n        -   BUT now we are measuring time until more than 1 success\n    -   Look for a rate of the events over time period\n\n## Helpful R code\n\nLet's say we're sitting at the bus stop, measuring the time until 4 buses arrive. We know the bus comes every 10 minutes on average.\n\n-   If we want to know the probability that the 4 buses arrive in the next 50 minutes:\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    pgamma(q = 50, rate = 1/10, shape = 4)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    [1] 0.7349741\n    ```\n    :::\n    \n    ```{.r .cell-code}\n    pgamma(q = 50, scale = 10, shape = 4)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    [1] 0.7349741\n    ```\n    :::\n    :::\n\n\n-   If we want to know the time, say $t$, where the probability of the 4 buses arriving at $t$ or earlier is 0.35:\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    qgamma(p = 0.35, rate = 1/10, shape = 4)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    [1] 29.87645\n    ```\n    :::\n    :::\n\n\n-   If we want to know the probability that the 4 buses arrives between 30 and 50 minutes:\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    pgamma(q = 50, scale = 10, shape = 4) - pgamma(q = 30, scale = 10, shape = 4)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    [1] 0.382206\n    ```\n    :::\n    :::\n\n\n-   If we want to sample 20 arrival times for the 4 buses:\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    rgamma(n = 20, scale = 10, shape = 4)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n     [1] 23.62559 67.87353 66.09070 37.22996 26.01786 69.19651 33.56302 41.93588\n     [9] 18.28835 76.26211 74.34490 51.98992 15.32024 50.57118 73.52642 36.96576\n    [17] 66.41893 17.71069 30.96120 21.86717\n    ```\n    :::\n    :::\n\n\n## Remarks\n\n-   The parameter $r$ in a Gamma($r$,$\\lambda$) distribution does NOT need to be a positive integer\n\n    -   $r$ is usually a positive integer\n\n-   When $r$ is a positive integer, the distribution is sometimes called an Erlang($r$,$\\lambda$) distribution\n\n     \n\n     \n\n-   When $r$ is any positive real number, we have a general gamma distribution that is usually instead parameterized by $\\alpha>0$ and $\\beta>0$, where:\n\n    -   $\\alpha = \\text{shape parameter}$ : same as $k$, the total number of events we must witness\n\n        -   In R code example: 4 buses to wait for\n\n    -   $\\beta = \\text{scale parameter}$ : same as $\\lambda$, the rate parameter\n\n        -   In R code example: 1 bus per 10 minutes (1/10)\n\n## Sending money orders\n\n::: columns\n::: {.column width=\"30%\"}\n::: example\n::: ex-title\nExample 1\n:::\n\n::: ex-cont\nOn average, someone sends a money order once per 15 minutes. What is the probability someone sends 10 money orders in less than 3 hours?\n:::\n:::\n:::\n:::\n\n## Additional Resource\n\n-   Another helpful site with R code: <https://rpubs.com/mpfoley73/459051>\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}